/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { APICaller } from '../apiCaller';
import { Descriptor } from '../descriptor';
<<<<<<< HEAD
import { CallSettings } from '../gax';
=======
>>>>>>> fe09a3bd44ca8f9eefa95d8b15258bdc9141f678
import { StreamType } from './streaming';
/**
 * A descriptor for streaming calls.
 */
export declare class StreamDescriptor implements Descriptor {
    type: StreamType;
    streaming: boolean;
    rest?: boolean;
<<<<<<< HEAD
    constructor(streamType: StreamType, rest?: boolean);
    getApiCaller(settings: CallSettings): APICaller;
=======
    gaxStreamingRetries?: boolean;
    constructor(streamType: StreamType, rest?: boolean, gaxStreamingRetries?: boolean);
    getApiCaller(): APICaller;
>>>>>>> fe09a3bd44ca8f9eefa95d8b15258bdc9141f678
}
